apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: "{{ .Release.Name }}-standalone"
  labels:
    app: "{{ .Release.Name }}-standalone"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-standalone"
  serviceName: "{{ .Release.Name }}-standalone"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-standalone"
    spec:
      containers:
        - image: mongo
          name: "{{ .Release.Name }}-pod"
          args:
            - "--dbpath"
            - "/data/mongo"
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          envFrom:
            - secretRef:
                name: "{{ .Release.Name }}-secret"
          volumeMounts:
            - name: "{{ .Release.Name }}-pv"
              mountPath: /data/mongo
      volumes:
        - name: "{{ .Release.Name }}-pv"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-pvc"
